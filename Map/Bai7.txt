import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Bai7 {
    public static void merge(int arr[], int l, int m, int r)
    {
        int n1 = m - l + 1;
        int n2 = r - m;
 
        int L[] = new int[n1];
        int R[] = new int[n2];
 
        for (int i = 0; i < n1; ++i)
            L[i] = arr[l + i];
        for (int j = 0; j < n2; ++j)
            R[j] = arr[m + 1 + j];
 
        int i = 0, j = 0;
 
        int k = l;
        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) {
                arr[k] = L[i];
                i++;
            }
            else {
                arr[k] = R[j];
                j++;
            }
            k++;
        }
 
        while (i < n1) {
            arr[k] = L[i];
            i++;
            k++;
        }
 
        while (j < n2) {
            arr[k] = R[j];
            j++;
            k++;
        }
    }
 
    public static void sort(int arr[], int l, int r)
    {
        if (l < r) {
 
            int m = l + (r - l) / 2;
 
            sort(arr, l, m);
            sort(arr, m + 1, r);

            merge(arr, l, m, r);
        }
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] dat = new int[n];
        for(int i = 0; i < n; i++) {
            dat[i] = in.nextInt();
        }
        sort(dat,0,dat.length-1);
        int minDiff = Integer.MAX_VALUE;
        String out = "";
        for(int i = 0; i < n - 1; i++) {
            if(Math.abs(dat[i + 1] - dat[i]) <= minDiff) {
                if(dat[i + 1] - dat[i] == minDiff) {
                    out += " " + dat[i] + " " + dat[i + 1];
                } else {
                    out = dat[i] + " " + dat[i + 1];
                }
                minDiff = dat[i + 1] - dat[i];
            }
        }
        System.out.println(out);
    }
}
